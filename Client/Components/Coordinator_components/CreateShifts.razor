@inject HttpClient Http
@using vagtplanen.Shared.Models

<div class="modal fade show modal-lg" id="myModal" style="display:block;" aria-modal="true" role="dialog">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Opret vagt</h3>
                <button type="button" class="close" @onclick="@ModalCancel">&times;</button>
            </div>
            <div class="modal-body">
                @if (shifts == null)
                {
                    <p><em>Loading...</em></p>
                }
                else
                {
                    <EditForm Model="@createT">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <p>
                            <label>
                                Beskrivelse:
                                <InputText @bind-Value="@createT.description" />
                            </label>
                        </p>
                    </EditForm>

                    <EditForm Model="@createS">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <p>
                            <label>
                                Vagt startdato:
                                <input type="date" @bind="@startdate" />
                            </label>
                        </p>
                        <p>
                            <label>
                                Vagt starttid:
                                <input type="time" @bind="@starttime" />
                            </label>
                        </p>
                        <p>
                            <label>
                                Vagt slut (dato og tid):
                                <input type="datetime" @bind="@createS.end_time" />
                            </label>
                        </p>

                    </EditForm>
                    <EditForm Model="@createT">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <p>
                            <label>
                                Antal vagter:
                                <InputNumber @bind-Value="@createT.number_of_shifts"/>
                            </label>
                        </p>
                    </EditForm>

                        }
                </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="@ModalOk">OK</button>
            </div>
        </div>
    </div>
</div>


@code {

    public Shift[] shifts;

    protected async override Task OnInitializedAsync()
    {
        shifts = await Http.GetFromJsonAsync<Shift[]>("api/shift");
    }

    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }

    private Task ModalOk()
    {
        return OnClose.InvokeAsync(true);
    }



    public static Shift createS = new();
    public static TaskClass createT = new();


    public DateTime startdate = DateTime.Now;
    public DateTime starttime = DateTime.Now;
    



    //private Task CreateShift()
    //{
    //    postUser(create);
    //    return OnClose.InvokeAsync(true);
    //}

    //public Task<HttpResponseMessage> postUser(Shift shift)
    //{
    //    return Http.PostAsJsonAsync<Shift>("Shift", shift);
    //}

}
