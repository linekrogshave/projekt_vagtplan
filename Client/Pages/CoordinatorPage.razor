@using vagtplanen.Shared.Models;
@using vagtplanen.Client.Components.Coordinator_components;
@inject HttpClient Http
@inject NavigationManager uriHelper


<EditForm Model="@coor">
    <h1>Velkommen @coor.first_name</h1>

    <RadzenCard Style="width:922px;">
        <div class="row">
            <RadzenCard Style="width:300px;">
                <div class="row">
                    <div class="col-md-10">
                        <b>Vagter:</b>
                        <div>Her kan du se eksisterende og oprette nye vagter</div>
                    </div>
                    <div class="col-md-6">
                        <button class="btn btn-success" @onclick="OpenSeeShiftsDialog">Se vagter</button>
                        <br />
                        <br />
                        <button class="btn btn-success" @onclick="OpenCreateShiftsDialog">Opret vagter</button>
                    </div>
                </div>
            </RadzenCard>

            <RadzenCard Style="width:300px;">
                <div class="row">
                    <div class="col-md-10">
                        <b>Frivillige:</b>
                        <div>Her kan du se, ændre og oprette frivillige i systemet</div>
                    </div>
                    <div class="col-md-6">
                        <button class="btn btn-success" @onclick="OpenSeeVolunteersDialog">Se frivillige</button>
                        <button class="btn btn-success" @onclick="OpenCreateVolunteersDialog">Opret frivillige</button>
                        <button class="btn btn-success" @onclick="OpenEditVolunteersDialog">Rediger frivilliges oplysninger</button>
                    </div>
                </div>
            </RadzenCard>

            <RadzenCard Style="width:300px;">
                <div class="row">
                    <div class="col-md-10">
                        <b>Koordinatorer:</b>
                        <div>Her kan du se, ændre og oprette koordinatorer i systemet</div>
                    </div>
                    <div class="col-md-6">
                        <button class="btn btn-success" @onclick="OpenSeeCoordinatorsDialog">Se koordinatorer</button>
                        <button class="btn btn-success" @onclick="OpenCreateCoordinatorsDialog">Opret koordinatorer</button>
                        <button class="btn btn-success" @onclick="OpenEditCoordinatorsDialog">Rediger koordinatorers oplysninger</button>
                    </div>
                </div>
            </RadzenCard>

            <RadzenCard Style="width:300px;">
                <div class="row">
                    <div class="col-md-10">
                        <b>Kuponer:</b>
                        <div>Her kan du oprette kuponer</div>
                    </div>
                    <div class="col-md-6">
                        <button class="btn btn-success" @onclick="OpenCreateCouponDialog">Opret kuponer</button>
                    </div>
                </div>
            </RadzenCard>
            
               <RadzenCard Style="width:300px;">
                <div class="row">
                    <div class="col-md-10">
                        <b>Se din data:</b>
                        <div>Se og ændre info vedrørende dig</div>
                    </div>
                    <div class="col-md-6">
                        <button class="btn btn-success" @onclick="() => OpenCoordinatorInfoDialog()">Se</button>
                    </div>
                </div>
            </RadzenCard>
        </div>
    </RadzenCard>
    <button type="button" class="btn btn-primary" @onclick="@Reload">Log ud</button>
</EditForm>

@*SHIFTS*@
@if (SeeShiftsDialogOpen)
{
    <SeeTasks OnClose="@OnSeeShiftsDialogClose"></SeeTasks>
}

@if (CreateShiftsDialogOpen)
{
    <CreateShifts OnClose="@OnCreateShiftsDialogClose"></CreateShifts>
}


@*VOLUNTEERS*@
@if (SeeVolunteersDialogOpen)
{
    <SeeVolunteers OnClose="@OnSeeVolunteersDialogClose"></SeeVolunteers>
}

@if (CreateVolunteersDialogOpen)
{
    <CreateVolunteers OnClose="@OnCreateVolunteersDialogClose"></CreateVolunteers>
}

@if (EditVolunteersDialogOpen)
{
    <EditVolunteers OnClose="@OnEditVolunteersDialogClose"></EditVolunteers>
}

@*COORDINATORS*@
@if (SeeCoordinatorsDialogOpen)
{
    <SeeCoordinators OnClose="@OnSeeCoordinatorsDialogClose"></SeeCoordinators>
}

@if (CreateCoordinatorsDialogOpen)
{
    <CreateCoordinators OnClose="@OnCreateCoordinatorsDialogClose"></CreateCoordinators>
}

@if (EditCoordinatorsDialogOpen)
{
    <EditCoordinators OnClose="@OnEditCoordinatorsDialogClose"></EditCoordinators>
}

@*COUPONS*@
@if (CreateCouponDialogOpen)
{
    <CreateCoupon OnClose="@OnCreateCouponDialogClose"></CreateCoupon>
}

@if (CoordinatorInfoDialogOpen)
{
    <CoordinatorInfo coor="@coor" OnClose="@OnCoordinatorInfoDialogClose"></CoordinatorInfo>
}




@code {
    [Parameter] public Coordinator coor { get; set; }

    // Kode til SeeShifts Modal Dialog
    public bool SeeShiftsDialogOpen { get; set; }

    public void OpenSeeShiftsDialog()
    {
        SeeShiftsDialogOpen = true;
        StateHasChanged();
    }

    public void OnSeeShiftsDialogClose(bool accepted)
    {
        SeeShiftsDialogOpen = false;
        StateHasChanged();
    }


    // Kode til CreateShifts Modal Dialog
    public bool CreateShiftsDialogOpen { get; set; }

    public void OpenCreateShiftsDialog()
    {
        CreateShiftsDialogOpen = true;
        StateHasChanged();
    }

    public void OnCreateShiftsDialogClose(bool accepted)
    {
        CreateShiftsDialogOpen = false;
        StateHasChanged();
    }


    // Kode til SeeVolunteers Modal Dialog
    public bool SeeVolunteersDialogOpen { get; set; }

    public void OpenSeeVolunteersDialog()
    {
        SeeVolunteersDialogOpen = true;
        StateHasChanged();
    }

    public void OnSeeVolunteersDialogClose(bool accepted)
    {
        SeeVolunteersDialogOpen = false;
        StateHasChanged();
    }

    // Kode til CreateVolunteers Modal Dialog
    public bool CreateVolunteersDialogOpen { get; set; }

    public void OpenCreateVolunteersDialog()
    {
        CreateVolunteersDialogOpen = true;
        StateHasChanged();
    }

    public void OnCreateVolunteersDialogClose(bool accepted)
    {
        CreateVolunteersDialogOpen = false;
        StateHasChanged();
    }

    // Kode til EditVolunteers Modal Dialog
    public bool EditVolunteersDialogOpen { get; set; }

    public void OpenEditVolunteersDialog()
    {
        EditVolunteersDialogOpen = true;
        StateHasChanged();
    }

    public void OnEditVolunteersDialogClose(bool accepted)
    {
        EditVolunteersDialogOpen = false;
        StateHasChanged();
    }

    // Kode til SeeCoordinators Modal Dialog
    public bool SeeCoordinatorsDialogOpen { get; set; }

    public void OpenSeeCoordinatorsDialog()
    {
        SeeCoordinatorsDialogOpen = true;
        StateHasChanged();
    }

    public void OnSeeCoordinatorsDialogClose(bool accepted)
    {
        SeeCoordinatorsDialogOpen = false;
        StateHasChanged();
    }

    // Kode til CreateCoordinators Modal Dialog
    public bool CreateCoordinatorsDialogOpen { get; set; }

    public void OpenCreateCoordinatorsDialog()
    {
        CreateCoordinatorsDialogOpen = true;
        StateHasChanged();
    }

    public void OnCreateCoordinatorsDialogClose(bool accepted)
    {
        CreateCoordinatorsDialogOpen = false;
        StateHasChanged();
    }

    // Kode til EditCoordinators Modal Dialog
    public bool EditCoordinatorsDialogOpen { get; set; }

    public void OpenEditCoordinatorsDialog()
    {
        EditCoordinatorsDialogOpen = true;
        StateHasChanged();
    }

    public void OnEditCoordinatorsDialogClose(bool accepted)
    {
        EditCoordinatorsDialogOpen = false;
        StateHasChanged();
    }


    // Kode til CreateCoupon Modal Dialog
    public bool CreateCouponDialogOpen { get; set; }

    public void OpenCreateCouponDialog()
    {
        CreateCouponDialogOpen = true;
        StateHasChanged();
    }

    public void Reload()
    {
        uriHelper.NavigateTo(uriHelper.Uri, forceLoad: true);
        coor = null;
    }

    public void OnCreateCouponDialogClose(bool accepted)
    {
        CreateCouponDialogOpen = false;
        StateHasChanged();
    }
    
        // Kode til CoordinatorInfo Modal Dialog
    public bool CoordinatorInfoDialogOpen { get; set; }

    public void OpenCoordinatorInfoDialog()
    {
        CoordinatorInfoDialogOpen = true;
        StateHasChanged();
    }

    public void OnCoordinatorInfoDialogClose(bool accepted)
    {
        CoordinatorInfoDialogOpen = false;
        StateHasChanged();
    }

}
